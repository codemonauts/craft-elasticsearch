{% import "_includes/forms" as forms %}

<h2>Settings for the search index</h2>

{{ forms.lightswitchField({
    label: "Transition"|t("elastic"),
    id: 'transition',
    name: 'transition',
    instructions: "When enabled, both, the Craft internal search index and the new Elasticsearch index will be updated. But only the Craft internal search index will be used for searching."|t("elastic"),
    on: settings.transition,
    reverseToggle: "modeOff",
    toggle: "modeOn"
}) }}

{% if settings.lastMode %}
<div id="modeOff" class="readable hidden">
    <blockquote class="note warning">
        <p>Deactivate the transition mode only if you are sure that you have re-indexed all existing elements to the Elastisearch index. From then on, only the Elasticsearch index will be used and the database index will become outdated.</p>
        <p>You can switch back to transition mode at any time.</p>
        <p><a href="https://plugins.codemonauts.com/plugins/elasticsearch/Migration.html">Check the documentation</a></p>
    </blockquote>
</div>
{% endif %}

{% if not settings.lastMode %}
<div id="modeOn" class="readable hidden">
    <blockquote class="note tip">
        <p>When you reactivate the transition mode, all new and updated elements since the last deactivation ({{ settings.lastSwitch|datetime('short') }}) are automatically re-indexed. This will get the outdated database index up to date.</p>
        <p><a href="https://plugins.codemonauts.com/plugins/elasticsearch/Migration.html">Check the documentation</a></p>
    </blockquote>
</div>
{% endif %}

{{ forms.autosuggestField({
    label: "Endpoint"|t("elastic"),
    id: 'endpoint',
    name: 'endpoint',
    instructions: "The endpoint URL of your elasticsearch server or cluster."|t("elastic"),
    value: settings.endpoint,
    suggestEnvVars: true,
    placeholder: 'https://...',
    type: 'text',
    errors: settings.getErrors('endpoint'),
    required: true
}) }}

{{ forms.selectField({
    label: "Authentication"|t("elastic"),
    id: 'authentication',
    name: 'authentication',
    instructions: "The authentication method to use."|t("elastic"),
    value: settings.authentication,
    options: authenticationOptions,
    required: true
}) }}

{{ forms.autosuggestField({
    label: "Username"|t("elastic"),
    id: 'username',
    name: 'username',
    instructions: "The username to user for authentication."|t("elastic"),
    value: settings.username,
    suggestEnvVars: true,
    type: 'text',
    required: false
}) }}

{{ forms.autosuggestField({
    label: "Password"|t("elastic"),
    id: 'password',
    name: 'password',
    instructions: "The password to use for authentication."|t("elastic"),
    value: settings.password,
    suggestEnvVars: true,
    type: 'text',
    required: false
}) }}

{{ forms.autosuggestField({
    label: "AWS Region"|t("elastic"),
    id: 'region',
    name: 'region',
    instructions: "The AWS region the domain endpoint is in."|t("elastic"),
    value: settings.region,
    suggestEnvVars: true,
    type: 'text',
    errors: settings.getErrors('region'),
    required: false
}) }}

{{ forms.autosuggestField({
    label: "Index name"|t("elastic"),
    id: 'indexName',
    name: 'indexName',
    instructions: "The name of the index to use. It will be prepended to every site's handle."|t("elastic"),
    value: settings.indexName,
    suggestEnvVars: true,
    type: 'text',
    errors: settings.getErrors('indexName'),
    required: true
}) }}

{{ forms.autosuggestField({
    label: "Field prefix"|t("elastic"),
    id: 'fieldPrefix',
    name: 'fieldPrefix',
    instructions: "Prefix for all field handles in the index."|t("elastic"),
    value: settings.fieldPrefix,
    suggestEnvVars: true,
    type: 'text',
    errors: settings.getErrors('fieldPrefix'),
    required: true
}) }}

<h2>Tuning</h2>

{{ forms.editableTableField({
    first: true,
    label: "Field boosting"|t("elastic"),
    instructions: 'Add boosts to attributes or field handles.'|t("elastic"),
    id: 'fieldBoosts',
    name: 'fieldBoosts',
    cols: boostsCols,
    rows: settings.fieldBoosts,
    errors: settings.getErrors('fieldBoosts'),
}) }}